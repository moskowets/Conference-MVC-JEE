-- MySQL Script generated by MySQL Workbench
-- Mon Aug 29 20:34:26 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema conference
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `conference` ;

-- -----------------------------------------------------
-- Schema conference
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `conference` DEFAULT CHARACTER SET utf8 ;
SHOW WARNINGS;
USE `conference` ;

-- -----------------------------------------------------
-- Table `conference`.`language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference`.`language` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `conference`.`language` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `conference`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference`.`user` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `conference`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `role` ENUM("administrator", "moderator", "speaker", "user") NULL DEFAULT 'user',
  `email` VARCHAR(255) NOT NULL COMMENT '^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\\\.[A-Z]{2,}$',
  `password` VARCHAR(32) NOT NULL,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `language` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  INDEX `FK_user_language_idx` (`language` ASC) VISIBLE,
  CONSTRAINT `FK_user_language`
    FOREIGN KEY (`language`)
    REFERENCES `conference`.`language` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `conference`.`event`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference`.`event` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `conference`.`event` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(1023) NOT NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `start_date` DATE NULL,
  `start_time` TIME NULL,
  `place` VARCHAR(1023) NULL,
  `is_over` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `conference`.`report`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference`.`report` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `conference`.`report` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(1023) NOT NULL,
  `event_id` INT NOT NULL,
  `state` ENUM("assigned", "suggested") NOT NULL DEFAULT 'suggested',
  `speaker_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_report_event_idx` (`event_id` ASC) VISIBLE,
  INDEX `FK_report_user_idx` (`speaker_id` ASC) VISIBLE,
  CONSTRAINT `FK_report_event`
    FOREIGN KEY (`event_id`)
    REFERENCES `conference`.`event` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_report_user`
    FOREIGN KEY (`speaker_id`)
    REFERENCES `conference`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `conference`.`suggested_speaker`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference`.`suggested_speaker` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `conference`.`suggested_speaker` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `report_id` INT NOT NULL,
  `speaker_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_suggested_speakers_report_idx` (`report_id` ASC) VISIBLE,
  INDEX `FK_suggested_speakers_user_idx` (`speaker_id` ASC) VISIBLE,
  CONSTRAINT `FK_suggested_speakers_report`
    FOREIGN KEY (`report_id`)
    REFERENCES `conference`.`report` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_suggested_speakers_user`
    FOREIGN KEY (`speaker_id`)
    REFERENCES `conference`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `conference`.`participant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference`.`participant` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `conference`.`participant` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `event_id` INT NOT NULL,
  `has_attended` TINYINT NOT NULL DEFAULT 0,
  `participant_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_participant_event_idx` (`event_id` ASC) VISIBLE,
  INDEX `FK_participant_user_idx` (`participant_id` ASC) VISIBLE,
  CONSTRAINT `FK_participant_event`
    FOREIGN KEY (`event_id`)
    REFERENCES `conference`.`event` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_participant_user`
    FOREIGN KEY (`participant_id`)
    REFERENCES `conference`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `conference`.`email_notification`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference`.`email_notification` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `conference`.`email_notification` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `event_id` INT NOT NULL,
  `text` VARCHAR(1023) NOT NULL,
  `is_sent` TINYINT NOT NULL DEFAULT 0,
  `next_send_attempt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `error_log` MEDIUMTEXT NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_email_notification_event_idx` (`event_id` ASC) VISIBLE,
  CONSTRAINT `FK_email_notification_event`
    FOREIGN KEY (`event_id`)
    REFERENCES `conference`.`event` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `conference`.`event_name_translation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference`.`event_name_translation` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `conference`.`event_name_translation` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `translation` VARCHAR(1023) NOT NULL,
  `event_id` INT NOT NULL,
  `language_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_event_name_translation_event1_idx` (`event_id` ASC) VISIBLE,
  INDEX `fk_event_name_translation_language1_idx` (`language_id` ASC) VISIBLE,
  UNIQUE INDEX `levent_id_anguage_id_UNIQUE` (`event_id` ASC, `language_id` ASC) VISIBLE,
  CONSTRAINT `fk_event_name_translation_event1`
    FOREIGN KEY (`event_id`)
    REFERENCES `conference`.`event` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_name_translation_language1`
    FOREIGN KEY (`language_id`)
    REFERENCES `conference`.`language` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `conference`.`report_name_translation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `conference`.`report_name_translation` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `conference`.`report_name_translation` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `translation` VARCHAR(1023) NOT NULL,
  `report_id` INT NOT NULL,
  `language_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_report_name_translation_report1_idx` (`report_id` ASC) VISIBLE,
  INDEX `fk_report_name_translation_language1_idx` (`language_id` ASC) VISIBLE,
  UNIQUE INDEX `report_id_language_id_UNIQUE` (`report_id` ASC, `language_id` ASC) VISIBLE,
  CONSTRAINT `fk_report_name_translation_report1`
    FOREIGN KEY (`report_id`)
    REFERENCES `conference`.`report` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_report_name_translation_language1`
    FOREIGN KEY (`language_id`)
    REFERENCES `conference`.`language` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
